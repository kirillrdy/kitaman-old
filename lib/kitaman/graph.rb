module Kitaman

  # Class to handle GraphvizGraph dependency output
  # 
  # Usage:
  # g = GraphvizGraph.new
  # g.add("parent","child")
  # g.to_dot => will return dot in graphviz format
  class Graph

    def initialize
      @header = '/* Generated by Kitaman. */
   digraph kita_linux {
  size="600,600";
  node [color=lightblue2, style=filled];'
      @list = []
    end
    
    def add(parent,child)
      if not [parent,child].in @list
        @list << [parent,child]
      end
    end

    def to_dot
     output = @header 
     @list.each do |item|
      output +=  "\"#{item[0]}\" -> \"#{item[1]}\" ; \n"
     end
     output += "}"
     return output
    end
  end

end
